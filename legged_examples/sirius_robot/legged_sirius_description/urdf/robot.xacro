<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot">
    <xacro:arg name="gpu" default="false"/>
    <xacro:property name="gpu" value="$(arg gpu)" />
    <xacro:arg name="robot_type" default="sirius_mini"/>
    <xacro:arg name="add_laser" default="false"/>
    <xacro:property name="is_mini" value="$(arg robot_type)" />
    <xacro:include filename="$(find legged_sirius_description)/urdf/common/materials.xacro"/>
    <xacro:include filename="$(find legged_sirius_description)/urdf/common/leg.xacro"/>
    <xacro:include filename="$(find legged_sirius_description)/urdf/common/gazebo.xacro"/>
    <xacro:include filename="$(find legged_sirius_description)/urdf/common/imu.xacro"/>

    <xacro:include filename="$(find legged_sirius_description)/urdf/$(arg robot_type)/const.xacro"/>
    <xacro:if value="$(arg add_laser)">
        <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
        <xacro:VLP-16 parent="base" name="velodyne" topic="/velodyne_points" hz="10" samples="440" gpu="${gpu}">
        <origin xyz="${lidar_com_x} ${lidar_com_y} ${lidar_com_z}" rpy="0 0 0" />
    </xacro:VLP-16>
    </xacro:if>

    <link name="base">
        <visual>
        <xacro:if value="${is_mini=='sirius_mini'}">
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </xacro:if>
        <xacro:if value="${is_mini!='sirius_mini'}">
            <origin rpy="0 0 0" xyz="0.055 0 0"/>
        </xacro:if>
            <geometry>
                <mesh filename="package://legged_sirius_description/meshes/$(arg robot_type)/trunk.STL" scale="1 1 1"/>
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="${trunk_length} ${trunk_width} ${trunk_height}"/>
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="${trunk_com_x} ${trunk_com_y} ${trunk_com_z}"/>
            <mass value="${trunk_mass}"/>
            <inertia
                    ixx="${trunk_ixx}" ixy="${trunk_ixy}" ixz="${trunk_ixz}"
                    iyy="${trunk_iyy}" iyz="${trunk_iyz}"
                    izz="${trunk_izz}"/>
        </inertial>
    </link>
    <!--mirror: mirror the dynamic parameters(COM, inertia)-->
    <!--mirror_dae: use separate OBJ/DAE files each side-->
    <!--front_hind: front or hind of the dynamic parameters(flipping along x axis)-->
    <!--front_hind_dae: flip the DAE along y axis or not-->
    <xacro:IMU connected_to="base" imu_name="unitree_imu" xyz="0. 0. 0." rpy="0. 0. 0."/>


    <xacro:if value="${is_mini=='sirius_mini'}">
        <xacro:leg prefix="RF" mirror="-1" mirror_dae="True" front_hind="1" front_hind_dae="False" hear_open="True">
            <origin rpy="0 0 0" xyz="${leg_offset_x} ${-leg_offset_y} 0"/>
        </xacro:leg>

        <xacro:leg prefix="LF" mirror="1" mirror_dae="False" front_hind="1" front_hind_dae="False" hear_open="False">
            <origin rpy="0 0 0" xyz="${leg_offset_x} ${leg_offset_y} 0"/>
        </xacro:leg>

        <xacro:leg prefix="RH" mirror="-1" mirror_dae="True" front_hind="-1" front_hind_dae="True" hear_open="True">
            <origin rpy="0 0 0" xyz="${-leg_offset_x} ${-leg_offset_y} 0"/>
        </xacro:leg>

        <xacro:leg prefix="LH" mirror="1" mirror_dae="False" front_hind="-1" front_hind_dae="True" hear_open="False">
            <origin rpy="0 0 0" xyz="${-leg_offset_x} ${leg_offset_y} 0"/>
        </xacro:leg>
    </xacro:if>
    <xacro:if value="${is_mini!='sirius_mini'}">
        <xacro:leg prefix="LF" mirror="1" mirror_dae="False" front_hind="1" front_hind_dae="True" hear_open="True">
            <origin rpy="0 0 0" xyz="${leg_offset_x} ${leg_offset_y} 0"/>
        </xacro:leg>
        <xacro:leg prefix="LH" mirror="1" mirror_dae="False" front_hind="-1" front_hind_dae="False" hear_open="True">
            <origin rpy="0 0 0" xyz="${-leg_offset_x} ${leg_offset_y} 0"/>
        </xacro:leg>
        <xacro:leg prefix="RF" mirror="-1" mirror_dae="True" front_hind="1" front_hind_dae="True" hear_open="True">
            <origin rpy="0 0 0" xyz="${leg_offset_x} ${-leg_offset_y} 0"/>
        </xacro:leg>
            <xacro:leg prefix="RH" mirror="-1" mirror_dae="True" front_hind="-1" front_hind_dae="False" hear_open="True">
            <origin rpy="0 0 0" xyz="${-leg_offset_x} ${-leg_offset_y} 0"/>
        </xacro:leg>
    </xacro:if>



</robot>
